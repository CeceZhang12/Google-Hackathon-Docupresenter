{"payload":{"allShortcutsEnabled":true,"fileTree":{"":{"items":[{"name":"DocuPresenterFinal.ipynb","path":"DocuPresenterFinal.ipynb","contentType":"file"},{"name":"DocuPresenter_for_Report.ipynb","path":"DocuPresenter_for_Report.ipynb","contentType":"file"},{"name":"Google Hackathon Report Presentation.pdf","path":"Google Hackathon Report Presentation.pdf","contentType":"file"},{"name":"README.md","path":"README.md","contentType":"file"},{"name":"Report Presentation Generated By Project.pdf","path":"Report Presentation Generated By Project.pdf","contentType":"file"}],"totalCount":5}},"fileTreeProcessingTime":2.16406,"foldersToFetch":[],"reducedMotionEnabled":"system","repo":{"id":714425858,"defaultBranch":"main","name":"Docupresenter","ownerLogin":"AniruddhIngle","currentUserCanPush":true,"isFork":false,"isEmpty":false,"createdAt":"2023-11-04T17:19:03.000-04:00","ownerAvatar":"https://avatars.githubusercontent.com/u/50107810?v=4","public":true,"private":false,"isOrgOwned":false},"symbolsExpanded":false,"treeExpanded":false,"refInfo":{"name":"main","listCacheKey":"v0:1699138013.0","canEdit":true,"refType":"branch","currentOid":"016039890b3adcfd7bc2061d3fffc45a723f835f"},"path":"DocuPresenterFinal.ipynb","currentUser":{"id":149909116,"login":"CeceZhang12","userEmail":"xiyuzhang12@hotmail.com"},"blob":{"rawLines":["{\"cells\":[{\"cell_type\":\"markdown\",\"metadata\":{\"id\":\"8Gu538iUXjbk\"},\"source\":[\"# DocuPresenter\"]},{\"cell_type\":\"markdown\",\"metadata\":{\"id\":\"HurWt-a6XviJ\"},\"source\":[\"## Setup\\n\",\"\\n\"]},{\"cell_type\":\"markdown\",\"source\":[\"### Install\"],\"metadata\":{\"id\":\"54eR6ECGrRha\"}},{\"cell_type\":\"code\",\"source\":[\"%%capture\\n\",\"\\n\",\"# Updating the apt-get package list\\n\",\"!apt-get update\\n\",\"\\n\",\"# Installing wkhtmltopdf for converting HTML to PDF\\n\",\"!apt-get install -y wkhtmltopdf\\n\",\"\\n\",\"# Installing Python packages\\n\",\"!pip install -U google-generativeai  # Generative AI functionalities from Google\\n\",\"!pip install googletrans==4.0.0-rc1  # Translation tasks\\n\",\"!pip install --upgrade google-api-python-client  # Interacting with Google APIs\\n\",\"!pip install nltk  # Natural language processing tasks\\n\",\"!pip install PyPDF2  # Handling and manipulating PDF files\\n\",\"!pip install weasyprint CairoSVG  # HTML to PDF conversion and vector graphics handling\\n\",\"!pip install python-docx  # Working with DOCX files\\n\"],\"metadata\":{\"id\":\"L8lHEC8KpxfK\"},\"execution_count\":null,\"outputs\":[]},{\"cell_type\":\"markdown\",\"source\":[\"### Import\"],\"metadata\":{\"id\":\"GOD-6M6arT2K\"}},{\"cell_type\":\"code\",\"source\":[\"# Import statements for the notebook\\n\",\"\\n\",\"# Google Generative AI\\n\",\"import google.generativeai as palm\\n\",\"\\n\",\"# Data handling and processing\\n\",\"import pandas as pd\\n\",\"import numpy as np\\n\",\"\\n\",\"# Natural Language Processing\\n\",\"import nltk\\n\",\"from nltk.tokenize import sent_tokenize\\n\",\"\\n\",\"# Translation\\n\",\"import googletrans\\n\",\"from googletrans import Translator\\n\",\"\\n\",\"# Regular expressions\\n\",\"import re\\n\",\"\\n\",\"# PDF handling\\n\",\"import PyPDF2\\n\",\"\\n\",\"# Working with DOCX files\\n\",\"from docx import Document\\n\",\"\\n\",\"# Provides a way of using operating system dependent functionality like reading or writing to a file system\\n\",\"import os\\n\",\"\\n\",\"# Used for manipulating text, such as formatting long strings to a specific width or indenting\\n\",\"import textwrap\\n\",\"\\n\"],\"metadata\":{\"id\":\"9pDDldlyqt64\"},\"execution_count\":null,\"outputs\":[]},{\"cell_type\":\"markdown\",\"metadata\":{\"id\":\"tW4iO3TlYL_w\"},\"source\":[\"### API Key\"]},{\"cell_type\":\"code\",\"execution_count\":null,\"metadata\":{\"id\":\"oegCrohmYNfx\"},\"outputs\":[],\"source\":[\"palm.configure(api_key='AIzaSyDlnJAOpPRzJLT1IeBisvc-Fe4Eg71O9AI')\"]},{\"cell_type\":\"markdown\",\"metadata\":{\"id\":\"HepWsBEMYXYf\"},\"source\":[\"### Choosing a Model\"]},{\"cell_type\":\"code\",\"execution_count\":null,\"metadata\":{\"id\":\"xKLX2HiDYPzB\"},\"outputs\":[],\"source\":[\"models = [m for m in palm.list_models() if 'embedText' in m.supported_generation_methods]\\n\",\"\\n\",\"model = models[0]\"]},{\"cell_type\":\"markdown\",\"metadata\":{\"id\":\"ioGxtVltPh-K\"},\"source\":[\"## Retrieve data from Drive\"]},{\"cell_type\":\"code\",\"execution_count\":null,\"metadata\":{\"colab\":{\"base_uri\":\"https://localhost:8080/\"},\"executionInfo\":{\"elapsed\":14909,\"status\":\"ok\",\"timestamp\":1702163604508,\"user\":{\"displayName\":\"ExpLearning Team10\",\"userId\":\"05679539219449516853\"},\"user_tz\":300},\"id\":\"2RbfdKR1PfLW\",\"outputId\":\"fdf73fb7-45b1-4918-be79-fdaf12559c0e\"},\"outputs\":[{\"output_type\":\"stream\",\"name\":\"stdout\",\"text\":[\"Mounted at /content/gdrive\\n\"]}],\"source\":[\"# Mount Google Drive to Google Colab.\\n\",\"from google.colab import drive\\n\",\"drive.mount('/content/gdrive', force_remount=True)\"]},{\"cell_type\":\"code\",\"execution_count\":null,\"metadata\":{\"colab\":{\"base_uri\":\"https://localhost:8080/\",\"height\":81},\"executionInfo\":{\"elapsed\":3252,\"status\":\"ok\",\"timestamp\":1702163607758,\"user\":{\"displayName\":\"ExpLearning Team10\",\"userId\":\"05679539219449516853\"},\"user_tz\":300},\"id\":\"zNQ_sCqNpa2O\",\"outputId\":\"deb018c0-2442-4cf2-bf93-34943b219aa8\"},\"outputs\":[{\"output_type\":\"execute_result\",\"data\":{\"text/plain\":[\"                 Filename                                               Text\\n\",\"0  Final Mini2 Report.pdf  T e a m\\\\n1 0 :\\\\nD o c u P r e s e n t e r\\\\n-\\\\n...\"],\"text/html\":[\"\\n\",\"  <div id=\\\"df-fe980e0a-4454-4130-8baf-8dbb0d9ef45c\\\" class=\\\"colab-df-container\\\">\\n\",\"    <div>\\n\",\"<style scoped>\\n\",\"    .dataframe tbody tr th:only-of-type {\\n\",\"        vertical-align: middle;\\n\",\"    }\\n\",\"\\n\",\"    .dataframe tbody tr th {\\n\",\"        vertical-align: top;\\n\",\"    }\\n\",\"\\n\",\"    .dataframe thead th {\\n\",\"        text-align: right;\\n\",\"    }\\n\",\"</style>\\n\",\"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\"  <thead>\\n\",\"    <tr style=\\\"text-align: right;\\\">\\n\",\"      <th></th>\\n\",\"      <th>Filename</th>\\n\",\"      <th>Text</th>\\n\",\"    </tr>\\n\",\"  </thead>\\n\",\"  <tbody>\\n\",\"    <tr>\\n\",\"      <th>0</th>\\n\",\"      <td>Final Mini2 Report.pdf</td>\\n\",\"      <td>T e a m\\\\n1 0 :\\\\nD o c u P r e s e n t e r\\\\n-\\\\n...</td>\\n\",\"    </tr>\\n\",\"  </tbody>\\n\",\"</table>\\n\",\"</div>\\n\",\"    <div class=\\\"colab-df-buttons\\\">\\n\",\"\\n\",\"  <div class=\\\"colab-df-container\\\">\\n\",\"    <button class=\\\"colab-df-convert\\\" onclick=\\\"convertToInteractive('df-fe980e0a-4454-4130-8baf-8dbb0d9ef45c')\\\"\\n\",\"            title=\\\"Convert this dataframe to an interactive table.\\\"\\n\",\"            style=\\\"display:none;\\\">\\n\",\"\\n\",\"  <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" height=\\\"24px\\\" viewBox=\\\"0 -960 960 960\\\">\\n\",\"    <path d=\\\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\\\"/>\\n\",\"  </svg>\\n\",\"    </button>\\n\",\"\\n\",\"  <style>\\n\",\"    .colab-df-container {\\n\",\"      display:flex;\\n\",\"      gap: 12px;\\n\",\"    }\\n\",\"\\n\",\"    .colab-df-convert {\\n\",\"      background-color: #E8F0FE;\\n\",\"      border: none;\\n\",\"      border-radius: 50%;\\n\",\"      cursor: pointer;\\n\",\"      display: none;\\n\",\"      fill: #1967D2;\\n\",\"      height: 32px;\\n\",\"      padding: 0 0 0 0;\\n\",\"      width: 32px;\\n\",\"    }\\n\",\"\\n\",\"    .colab-df-convert:hover {\\n\",\"      background-color: #E2EBFA;\\n\",\"      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\\n\",\"      fill: #174EA6;\\n\",\"    }\\n\",\"\\n\",\"    .colab-df-buttons div {\\n\",\"      margin-bottom: 4px;\\n\",\"    }\\n\",\"\\n\",\"    [theme=dark] .colab-df-convert {\\n\",\"      background-color: #3B4455;\\n\",\"      fill: #D2E3FC;\\n\",\"    }\\n\",\"\\n\",\"    [theme=dark] .colab-df-convert:hover {\\n\",\"      background-color: #434B5C;\\n\",\"      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\\n\",\"      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\\n\",\"      fill: #FFFFFF;\\n\",\"    }\\n\",\"  </style>\\n\",\"\\n\",\"    <script>\\n\",\"      const buttonEl =\\n\",\"        document.querySelector('#df-fe980e0a-4454-4130-8baf-8dbb0d9ef45c button.colab-df-convert');\\n\",\"      buttonEl.style.display =\\n\",\"        google.colab.kernel.accessAllowed ? 'block' : 'none';\\n\",\"\\n\",\"      async function convertToInteractive(key) {\\n\",\"        const element = document.querySelector('#df-fe980e0a-4454-4130-8baf-8dbb0d9ef45c');\\n\",\"        const dataTable =\\n\",\"          await google.colab.kernel.invokeFunction('convertToInteractive',\\n\",\"                                                    [key], {});\\n\",\"        if (!dataTable) return;\\n\",\"\\n\",\"        const docLinkHtml = 'Like what you see? Visit the ' +\\n\",\"          '<a target=\\\"_blank\\\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\\n\",\"          + ' to learn more about interactive tables.';\\n\",\"        element.innerHTML = '';\\n\",\"        dataTable['output_type'] = 'display_data';\\n\",\"        await google.colab.output.renderOutput(dataTable, element);\\n\",\"        const docLink = document.createElement('div');\\n\",\"        docLink.innerHTML = docLinkHtml;\\n\",\"        element.appendChild(docLink);\\n\",\"      }\\n\",\"    </script>\\n\",\"  </div>\\n\",\"\\n\",\"    </div>\\n\",\"  </div>\\n\"]},\"metadata\":{},\"execution_count\":6}],\"source\":[\"folder_path = \\\"/content/gdrive/MyDrive/Test1\\\"\\n\",\"documents_dict = {}\\n\",\"\\n\",\"# Check if the folder exists\\n\",\"if os.path.exists(folder_path):\\n\",\"    # Iterate over files in the folder\\n\",\"    for filename in os.listdir(folder_path):\\n\",\"        file_path = os.path.join(folder_path, filename)\\n\",\"        text = \\\"\\\"\\n\",\"\\n\",\"        if filename.endswith(\\\".pdf\\\"):  # Check if it's a PDF file\\n\",\"            with open(file_path, 'rb') as pdf_file:\\n\",\"                pdf_reader = PyPDF2.PdfReader(pdf_file)\\n\",\"\\n\",\"                # Extract text from each page\\n\",\"                for page in pdf_reader.pages:\\n\",\"                    page_text = page.extract_text()\\n\",\"                    if page_text:  # Ensure there's text on the page\\n\",\"                        text += page_text + \\\" \\\"  # Add space after each page's content\\n\",\"\\n\",\"        elif filename.endswith(\\\".docx\\\"):  # Check if it's a DOCX file\\n\",\"            doc = Document(file_path)\\n\",\"\\n\",\"            # Extract text from each paragraph\\n\",\"            for para in doc.paragraphs:\\n\",\"                text += para.text + \\\" \\\"  # Add space after each paragraph's content\\n\",\"\\n\",\"        # Truncate text if too long for your application\\n\",\"        shortened_text = text[:9900] if len(text) > 9900 else text\\n\",\"\\n\",\"        # Add the shortened text to the dictionary\\n\",\"        documents_dict[filename] = shortened_text\\n\",\"else:\\n\",\"    print(f\\\"Folder {folder_path} does not exist!\\\")\\n\",\"\\n\",\"# Convert the dictionary to a dataframe\\n\",\"df = pd.DataFrame(list(documents_dict.items()), columns=['Filename', 'Text'])\\n\",\"\\n\",\"df\\n\"]},{\"cell_type\":\"markdown\",\"source\":[\"### Embedding\"],\"metadata\":{\"id\":\"FgpnwVuqwTtT\"}},{\"cell_type\":\"code\",\"execution_count\":null,\"metadata\":{\"colab\":{\"base_uri\":\"https://localhost:8080/\",\"height\":81},\"executionInfo\":{\"elapsed\":477,\"status\":\"ok\",\"timestamp\":1702163608233,\"user\":{\"displayName\":\"ExpLearning Team10\",\"userId\":\"05679539219449516853\"},\"user_tz\":300},\"id\":\"JbCzgirhimmg\",\"outputId\":\"f0d9abea-a8d7-433c-e6f1-5c58a8bbe460\"},\"outputs\":[{\"output_type\":\"execute_result\",\"data\":{\"text/plain\":[\"                 Filename                                               Text  \\\\\\n\",\"0  Final Mini2 Report.pdf  T e a m\\\\n1 0 :\\\\nD o c u P r e s e n t e r\\\\n-\\\\n...   \\n\",\"\\n\",\"                                          Embeddings  \\n\",\"0  [-0.031585936, -0.016279532, -0.0064072893, 0....  \"],\"text/html\":[\"\\n\",\"  <div id=\\\"df-03b6466a-20de-4940-b173-6d8df5baf857\\\" class=\\\"colab-df-container\\\">\\n\",\"    <div>\\n\",\"<style scoped>\\n\",\"    .dataframe tbody tr th:only-of-type {\\n\",\"        vertical-align: middle;\\n\",\"    }\\n\",\"\\n\",\"    .dataframe tbody tr th {\\n\",\"        vertical-align: top;\\n\",\"    }\\n\",\"\\n\",\"    .dataframe thead th {\\n\",\"        text-align: right;\\n\",\"    }\\n\",\"</style>\\n\",\"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\"  <thead>\\n\",\"    <tr style=\\\"text-align: right;\\\">\\n\",\"      <th></th>\\n\",\"      <th>Filename</th>\\n\",\"      <th>Text</th>\\n\",\"      <th>Embeddings</th>\\n\",\"    </tr>\\n\",\"  </thead>\\n\",\"  <tbody>\\n\",\"    <tr>\\n\",\"      <th>0</th>\\n\",\"      <td>Final Mini2 Report.pdf</td>\\n\",\"      <td>T e a m\\\\n1 0 :\\\\nD o c u P r e s e n t e r\\\\n-\\\\n...</td>\\n\",\"      <td>[-0.031585936, -0.016279532, -0.0064072893, 0....</td>\\n\",\"    </tr>\\n\",\"  </tbody>\\n\",\"</table>\\n\",\"</div>\\n\",\"    <div class=\\\"colab-df-buttons\\\">\\n\",\"\\n\",\"  <div class=\\\"colab-df-container\\\">\\n\",\"    <button class=\\\"colab-df-convert\\\" onclick=\\\"convertToInteractive('df-03b6466a-20de-4940-b173-6d8df5baf857')\\\"\\n\",\"            title=\\\"Convert this dataframe to an interactive table.\\\"\\n\",\"            style=\\\"display:none;\\\">\\n\",\"\\n\",\"  <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" height=\\\"24px\\\" viewBox=\\\"0 -960 960 960\\\">\\n\",\"    <path d=\\\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\\\"/>\\n\",\"  </svg>\\n\",\"    </button>\\n\",\"\\n\",\"  <style>\\n\",\"    .colab-df-container {\\n\",\"      display:flex;\\n\",\"      gap: 12px;\\n\",\"    }\\n\",\"\\n\",\"    .colab-df-convert {\\n\",\"      background-color: #E8F0FE;\\n\",\"      border: none;\\n\",\"      border-radius: 50%;\\n\",\"      cursor: pointer;\\n\",\"      display: none;\\n\",\"      fill: #1967D2;\\n\",\"      height: 32px;\\n\",\"      padding: 0 0 0 0;\\n\",\"      width: 32px;\\n\",\"    }\\n\",\"\\n\",\"    .colab-df-convert:hover {\\n\",\"      background-color: #E2EBFA;\\n\",\"      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\\n\",\"      fill: #174EA6;\\n\",\"    }\\n\",\"\\n\",\"    .colab-df-buttons div {\\n\",\"      margin-bottom: 4px;\\n\",\"    }\\n\",\"\\n\",\"    [theme=dark] .colab-df-convert {\\n\",\"      background-color: #3B4455;\\n\",\"      fill: #D2E3FC;\\n\",\"    }\\n\",\"\\n\",\"    [theme=dark] .colab-df-convert:hover {\\n\",\"      background-color: #434B5C;\\n\",\"      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\\n\",\"      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\\n\",\"      fill: #FFFFFF;\\n\",\"    }\\n\",\"  </style>\\n\",\"\\n\",\"    <script>\\n\",\"      const buttonEl =\\n\",\"        document.querySelector('#df-03b6466a-20de-4940-b173-6d8df5baf857 button.colab-df-convert');\\n\",\"      buttonEl.style.display =\\n\",\"        google.colab.kernel.accessAllowed ? 'block' : 'none';\\n\",\"\\n\",\"      async function convertToInteractive(key) {\\n\",\"        const element = document.querySelector('#df-03b6466a-20de-4940-b173-6d8df5baf857');\\n\",\"        const dataTable =\\n\",\"          await google.colab.kernel.invokeFunction('convertToInteractive',\\n\",\"                                                    [key], {});\\n\",\"        if (!dataTable) return;\\n\",\"\\n\",\"        const docLinkHtml = 'Like what you see? Visit the ' +\\n\",\"          '<a target=\\\"_blank\\\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\\n\",\"          + ' to learn more about interactive tables.';\\n\",\"        element.innerHTML = '';\\n\",\"        dataTable['output_type'] = 'display_data';\\n\",\"        await google.colab.output.renderOutput(dataTable, element);\\n\",\"        const docLink = document.createElement('div');\\n\",\"        docLink.innerHTML = docLinkHtml;\\n\",\"        element.appendChild(docLink);\\n\",\"      }\\n\",\"    </script>\\n\",\"  </div>\\n\",\"\\n\",\"    </div>\\n\",\"  </div>\\n\"]},\"metadata\":{},\"execution_count\":7}],\"source\":[\"# Get the embeddings of each text and add to an embeddings column in the dataframe\\n\",\"def embed_fn(text):\\n\",\"  return palm.generate_embeddings(model=model, text=text)['embedding']\\n\",\"\\n\",\"df['Embeddings'] = df['Text'].apply(embed_fn)\\n\",\"df\"]},{\"cell_type\":\"markdown\",\"metadata\":{\"id\":\"akpfU2F3i1LH\"},\"source\":[\"## Query: PaLM\"]},{\"cell_type\":\"markdown\",\"source\":[\"### Topic & Age Selection\"],\"metadata\":{\"id\":\"TH0ysfwWv_Es\"}},{\"cell_type\":\"code\",\"execution_count\":null,\"metadata\":{\"id\":\"hpeEnyUiivkX\"},\"outputs\":[],\"source\":[\"topic = \\\"AI and Machine Learning\\\"\"]},{\"cell_type\":\"code\",\"source\":[\"age = \\\"23\\\"\"],\"metadata\":{\"id\":\"YX0rTOeGs1S2\"},\"execution_count\":null,\"outputs\":[]},{\"cell_type\":\"markdown\",\"source\":[\"### Prompt\"],\"metadata\":{\"id\":\"FJnEBjP9wDbn\"}},{\"cell_type\":\"code\",\"execution_count\":null,\"metadata\":{\"id\":\"IpUvTYQviwT4\",\"executionInfo\":{\"status\":\"ok\",\"timestamp\":1702163608645,\"user_tz\":300,\"elapsed\":414,\"user\":{\"displayName\":\"ExpLearning Team10\",\"userId\":\"05679539219449516853\"}},\"colab\":{\"base_uri\":\"https://localhost:8080/\"},\"outputId\":\"bccc7414-72f2-4e34-8041-7a001659b3a8\"},\"outputs\":[{\"output_type\":\"stream\",\"name\":\"stdout\",\"text\":[\"You are a helpful and informative bot that creates presentations using text from the reference passage included below.\\n\",\"I am a teacher for a group of '23'-year-old students, please output markdown scripts.\\n\",\"If the passage is irrelevant to the presentation, you may ignore it.\\n\",\"Topic: 'DocuPresenter'\\n\",\"PASSAGE: 'T e a m 1 0 : D o c u P r e s e n t e r - P r o m p t t o S l i d e s F i n a l R e p o r t E x p e r i e n t i a l L e a r n i n g : M i n i 2 P r o f e s s o r G a n e s h M a n i A n i r u d d h I n g l e S y l v a n n e B r a g a n z a S h e r r y L i H r i t i k B h a n s a l i C e c e Z h a n g D ECEMBER 9 TH 2 023 T a b l e o f C o n t e n t s 1. Project Overview ...................................................................................................................................................... 3 2. Hypothesis ................................................................................................................................................................ 3 3. Methodology ............................................................................................................................................................ 4 3.1 Makersuite ....................................................................................................................................................... 4 3.2 Document Search with Embedding ............................................................................................................... 5 3.3 Google API ..................................................................................................................................................... 6 3.4 Google Translate ............................................................................................................................................. 6 3.5 Expanding Inputs ........................................................................................................................................... 7 3.6 Customization ................................................................................................................................................ 7 3.6.1 Age ......................................................................................................................................................... 7 3.6.2 Language ............................................................................................................................................... 8 3.6.3 Topic ..................................................................................................................................................... 8 4. Results ...................................................................................................................................................................... 8 5. Evaluation ................................................................................................................................................................. 9 5.1 Results of Evaluation ...................................................................................................................................... 9 5.2 Improvements Based on Evaluation ............................................................................................................. 10 6. Challenges .............................................................................................................................................................. 10 7. Future Improvements ............................................................................................................................................ 11 7.1 Full Potential of Document Processing ....................................................................................................... 11 7.2 Methods for User-Centric Improvement .................................................................................................... 11 7.3 Methods for Technological Improvements ................................................................................................. 11 7.4 Optimizing Multilingual Data Processing ................................................................................................... 11 7.5 Introducing a Streamlined UI ...................................................................................................................... 12 7.6 Elevating Presentation Quality ..................................................................................................................... 12 8. Conclusion ............................................................................................................................................................. 13 Team Contributions .................................................................................................................................................. 14 Appendix .................................................................................................................................................................... 15 Citations ....................................................................................................................................................... 22 2 1 . P r o j e c t O v e r v i e w Our project, DocuPresenter, aims to transform text-based content into engaging presentations with the help of Googles powerful PaLM2 API. By harnessing the capabilities of this cutting-edge natural language processing tool, we have streamlined the process of creating dynamic presentations from textual information. Whether it is converting lengthy reports into informative slides or transforming written content into compelling spoken presentations, our team has enhanced the e\\u0000ciency and e\\u0000ectiveness of communication. With the PaLM2 API, we automated the structuring and summarizing of information, allowing users to e\\u0000ortlessly transform their ideas and data into engaging spoken presentations. We have also seamlessly integrated the capabilities of Google Translate API and Google Drive. This comprehensive approach ensures that users can e\\u0000ortlessly create dynamic presentations with multilingual support while managing their presentation documents e\\u0000ciently through Google Drive. Moreover, our project o\\u0000ers customization options, allowing users to tailor presentations based on age, language, and topic preferences. Whether its crafting presentations for di\\u0000erent age groups, diverse languages, or speci\\u0000c topics, our tool provides a versatile and user-friendly solution. This project is a game-changer in simplifying the presentation creation process, making it an invaluable tool for professionals, educators, and anyone looking to communicate their ideas e\\u0000ectively. 2 . H y p o t h e s i s The e\\u0000ective transformation of text into engaging presentations can be achieved by leveraging Googles PaLM2 API and MakerSuite for prompt engineering. Through iterative \\u0000ne-tuning of the model using data prompts, initially breaking text into bullet points and later generating Markdown-formatted scripts for multi-slide presentations, we aim to explore the impact of deterministic and random characteristics in the PaLM2 model. By controlling randomness through temperature settings during prompt generation, we anticipate that the re\\u0000ned model responses will exhibit enhanced creativity and coherence. Furthermore, the integration of the Google Translate API for multilingual expansion will be a key aspect of our project. We hypothesize that incorporating the translation capabilities of Google 3 Translate into our presentation generation process will not only enable the transformation of text into multiple languages but also enhance the overall inclusivity and global reach of the presentations. The seamless integration of the Google Translate API alongside PaLM2 and MakerSuite is expected to provide a comprehensive solution for creating engaging presentations in a multilingual context. Additionally, the seamless integration of the re\\u0000ned model responses into Python code within Google Colab, in conjunction with the PaLM API, is hypothesized to facilitate e\\u0000cient and streamlined presentation creation. We expect that the connection of input and output PDF \\u0000les to our Google Drive account, facilitated by Google APIs Explorer and the Google Drive API, will enhance accessibility and convenience in managing presentation-related documents. This comprehensive approach, combining PaLM2, MakerSuite, Google Translate API, and Google Drive integration, is anticipated to result in an innovative and e\\u0000cient solution for text-to-presentation transformation with improved user experience, accessibility, and multilingual capabilities. 3 . M e t h o d o l o g y 3.1 Makersuite In our project, we leveraged Googles MakerSuite for prompt engineering. Initially, we explored di\\u0000erent prompt types, including text prompts, data prompts, and chat prompts. After experimenting with these options, we found that the data prompt was the most suitable choice for our project aims due to its ability to tailor the input and output structure according to our project’s speci\\u0000c requirements (text to Markdown-formatted script). Data prompts work by taking custom instructions provided by users. In our case, we asked it to generate a presentation in Markdown script format tailored to a speci\\u0000c age group. Then we give the model speci\\u0000c input and output examples to work with. These prompts give the model examples to replicate. Google calls these “few-shot prompts.” They served as training data for the model. Over time, we \\u0000ne-tuned these examples based on the speci\\u0000c content structure and style we wanted for our presentations. This iterative process allowed the model to learn and adapt to our requirements. We proceeded step by step. 4 Our initial goal was to use this data prompt to e\\u0000ciently break blocks of text into bullet points, simplifying the content structuring process. Once we achieved this, we took it a step further by instructing the data prompt to format the extracted bullet points as a Markdown script for a two-slide presentation, consisting of one title slide and one content slide. Finally, we t'\\n\",\"\\n\",\"ANSWER:\\n\",\"\\n\"]}],\"source\":[\"def find_best_passage(topic, dataframe):\\n\",\"  \\\"\\\"\\\"\\n\",\"  Compute the distances between the query and each document in the dataframe\\n\",\"  using the dot product.\\n\",\"  \\\"\\\"\\\"\\n\",\"  query_embedding = palm.generate_embeddings(model=model, text=topic)\\n\",\"  dot_products = np.dot(np.stack(dataframe['Embeddings']), query_embedding['embedding'])\\n\",\"  idx = np.argmax(dot_products)\\n\",\"  return dataframe.iloc[idx]['Text'] # Return text from index with max value\\n\",\"\\n\",\"passage = find_best_passage(topic, df)\\n\",\"\\n\",\"def make_prompt(topic, age, relevant_passage):\\n\",\"    escaped = relevant_passage.replace(\\\"'\\\", \\\"\\\").replace('\\\"', \\\"\\\").replace(\\\"\\\\n\\\", \\\" \\\")\\n\",\"    prompt = textwrap.dedent(\\\"\\\"\\\"\\\\\\n\",\"        You are a helpful and informative bot that creates presentations using text from the reference passage included below.\\n\",\"        I am a teacher for a group of '{age}'-year-old students, please output markdown scripts.\\n\",\"        If the passage is irrelevant to the presentation, you may ignore it.\\n\",\"        Topic: '{topic}'\\n\",\"        PASSAGE: '{relevant_passage}'\\n\",\"\\n\",\"        ANSWER:\\n\",\"    \\\"\\\"\\\").format(topic=topic, age=age, relevant_passage=escaped)\\n\",\"\\n\",\"    return prompt\\n\",\"\\n\",\"\\n\",\"prompt = make_prompt(topic, age, passage)\\n\",\"print(prompt)\"]},{\"cell_type\":\"code\",\"execution_count\":null,\"metadata\":{\"id\":\"K1YvfJ8LQzjf\"},\"outputs\":[],\"source\":[\"text_models = [m for m in palm.list_models() if 'generateText' in m.supported_generation_methods]\\n\",\"\\n\",\"text_model = text_models[0]\\n\",\"\\n\",\"temperature = 0.5\\n\",\"answer = palm.generate_text(prompt=prompt,\\n\",\"                            model=text_model,\\n\",\"                            temperature=temperature,\\n\",\"                            max_output_tokens=1000)\\n\",\"\\n\",\"\\n\",\"llm_output= answer.result\"]},{\"cell_type\":\"markdown\",\"source\":[\"## Translation\"],\"metadata\":{\"id\":\"zz-2uR7_v3Xi\"}},{\"cell_type\":\"code\",\"source\":[\"def translate_text(text, dest_language):\\n\",\"    translator = Translator()\\n\",\"    try:\\n\",\"        translation = translator.translate(text, dest=dest_language)\\n\",\"        return translation.text\\n\",\"    except Exception as e:\\n\",\"        print(f\\\"Error during translation: {e}\\\")\\n\",\"        return text  # Return the original text if translation fails\\n\"],\"metadata\":{\"id\":\"KkAfBOymMEjt\"},\"execution_count\":null,\"outputs\":[]},{\"cell_type\":\"code\",\"source\":[\"lang = \\\"English\\\"\"],\"metadata\":{\"id\":\"l1UE1KcMB7or\"},\"execution_count\":null,\"outputs\":[]},{\"cell_type\":\"code\",\"source\":[\"translated_llm_output = translate_text(llm_output, lang)\\n\",\"\\n\",\"translated_llm_output\"],\"metadata\":{\"colab\":{\"base_uri\":\"https://localhost:8080/\",\"height\":139},\"id\":\"Ew_AG_i2MRV5\",\"executionInfo\":{\"status\":\"ok\",\"timestamp\":1702163619812,\"user_tz\":300,\"elapsed\":184,\"user\":{\"displayName\":\"ExpLearning Team10\",\"userId\":\"05679539219449516853\"}},\"outputId\":\"b6ce2c54-e3f0-4c0b-a2f0-113eb06771d5\"},\"execution_count\":null,\"outputs\":[{\"output_type\":\"execute_result\",\"data\":{\"text/plain\":[\"'```\\\\n# Title slide\\\\n\\\\n## DocuPresenter: Prompt to Slides\\\\n\\\\n### A tool for creating engaging presentations\\\\n\\\\n# Subtitle slide\\\\n\\\\n* Uses PaLM2 API to generate presentations from text\\\\n* Supports multilingual presentations\\\\n* Allows users to customize presentations based on age, language, and topic\\\\n\\\\n# Body slides\\\\n\\\\n* DocuPresenter uses PaLM2 API to generate presentations from text.\\\\n* The API is a powerful natural language processing tool that can understand and generate human language.\\\\n* DocuPresenter uses the API to break text into bullet points, format the bullet points as a Markdown script, and generate a presentation from the script.\\\\n* DocuPresenter supports multilingual presentations.\\\\n* Users can choose the language of the presentation and the API will translate the text accordingly.\\\\n* DocuPresenter allows users to customize presentations based on age, language, and topic.\\\\n* Users can choose the age group that the presentation is intended for and the API will generate a presentation that is appropriate for that age group.\\\\n* Users can choose the language of the presentation and the API will translate the text accordingly.\\\\n* Users can choose the topic of the presentation and the API will generate a presentation that is relevant to that topic.\\\\n\\\\n# Conclusion\\\\n\\\\nDocuPresenter is a powerful tool that can help users create engaging presentations.\\\\n* It is easy to use and can be customized to meet the needs of any user.\\\\n* It supports multilingual presentations and can be used to create presentations in any language.\\\\n* DocuPresenter is a valuable tool for anyone who wants to create engaging presentations.\\\\n```'\"],\"application/vnd.google.colaboratory.intrinsic+json\":{\"type\":\"string\"}},\"metadata\":{},\"execution_count\":14}]},{\"cell_type\":\"markdown\",\"metadata\":{\"id\":\"oBdkMf8WNO4u\"},\"source\":[\"## Convert .md to pdf and save to Gdrive\"]},{\"cell_type\":\"code\",\"execution_count\":null,\"metadata\":{\"id\":\"oavhJ1gNh5g3\",\"colab\":{\"base_uri\":\"https://localhost:8080/\"},\"executionInfo\":{\"status\":\"ok\",\"timestamp\":1702163621005,\"user_tz\":300,\"elapsed\":1196,\"user\":{\"displayName\":\"ExpLearning Team10\",\"userId\":\"05679539219449516853\"}},\"outputId\":\"f7ecd59c-ab9c-4d2f-e936-fd7e1257d0d4\"},\"outputs\":[{\"output_type\":\"stream\",\"name\":\"stdout\",\"text\":[\"The presentation PDF has been created and saved to /content/gdrive/MyDrive/Test/DocuPresenter_English_23.pdf.\\n\"]}],\"source\":[\"from weasyprint import HTML\\n\",\"import markdown\\n\",\"\\n\",\"# Ensure llm_output is a string and strip unnecessary characters if present.\\n\",\"translated_llm_output = translated_llm_output.strip(\\\"```\\\").strip()\\n\",\"\\n\",\"\\n\",\"# Split the content into slides based on '##' and insert page breaks before headers\\n\",\"slides = re.split(r'\\\\n## ', translated_llm_output)\\n\",\"for i, slide in enumerate(slides):\\n\",\"    if i > 0:\\n\",\"        slides[i] = f\\\"\\\\n\\\\n<div style=\\\\\\\"page-break-before: always;\\\\\\\"></div>\\\\n{slide}\\\"\\n\",\"\\n\",\"# Replace all heading levels with bold headings\\n\",\"for i, slide in enumerate(slides):\\n\",\"    for heading_level in range(2, 7):\\n\",\"        heading_pattern = f\\\"^({'#' * heading_level}) (.*)\\\"\\n\",\"        replacement_pattern = f\\\"\\\\\\\\1 **\\\\\\\\2**\\\"\\n\",\"        slide = re.sub(heading_pattern, replacement_pattern, slide, flags=re.MULTILINE)\\n\",\"    slides[i] = slide\\n\",\"\\n\",\"# Convert each slide to HTML\\n\",\"html_slides = [markdown.markdown(\\\"# {}\\\".format(slide), extensions=['markdown.extensions.extra']) for slide in slides]\\n\",\"\\n\",\"\\n\",\"\\n\",\"# HTML and CSS for the presentation-like format\\n\",\"presentation_html = \\\"\\\"\\\"\\n\",\"<!DOCTYPE html>\\n\",\"<html>\\n\",\"<head>\\n\",\"    <meta charset=\\\"utf-8\\\">\\n\",\"    <title>Presentation</title>\\n\",\"    <style>\\n\",\"        @page {{\\n\",\"            size: A4 landscape;\\n\",\"            margin: 0mm;\\n\",\"        }}\\n\",\"        body {{\\n\",\"            font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\n\",\"            margin: 0;\\n\",\"            padding: 0;\\n\",\"            display: block;\\n\",\"        }}\\n\",\"        section {{\\n\",\"            width: 80%;\\n\",\"            max-width: 1280px;\\n\",\"            margin: 1cm auto;\\n\",\"            page-break-after: always;\\n\",\"            page-break-inside: avoid;\\n\",\"            display: block;\\n\",\"        }}\\n\",\"        h1, h2, h3, h4 {{\\n\",\"            text-align: center;\\n\",\"            margin-top: 0.5cm;\\n\",\"            font-weight: bold;\\n\",\"        }}\\n\",\"        p, li {{\\n\",\"            font-size: 24px;\\n\",\"            line-height: 1.5;\\n\",\"            text-align: left;\\n\",\"            margin-left: 10%;\\n\",\"            margin-right: 10%;\\n\",\"        }}\\n\",\"        ul, ol {{\\n\",\"            padding-left: 20px;\\n\",\"        }}\\n\",\"    </style>\\n\",\"</head>\\n\",\"<body>\\n\",\"    {}\\n\",\"</body>\\n\",\"</html>\\n\",\"\\\"\\\"\\\".format(\\\"\\\\n\\\".join(html_slides))\\n\",\"\\n\",\"# Set the output file name\\n\",\"output_file_name = f\\\"{topic}_{lang}_{age}.pdf\\\"\\n\",\"\\n\",\"# Set the path to save the PDF file (modify as needed)\\n\",\"pdf_file_path = f\\\"/content/gdrive/MyDrive/Test/{output_file_name}\\\"\\n\",\"\\n\",\"# Generate the PDF from the HTML string and save it to the specified path\\n\",\"HTML(string=presentation_html).write_pdf(pdf_file_path)\\n\",\"\\n\",\"print(f\\\"The presentation PDF has been created and saved to {pdf_file_path}.\\\")\\n\"]}],\"metadata\":{\"colab\":{\"provenance\":[{\"file_id\":\"139rlbCn2MrirOHl7NgIpbbDdq-fFSucS\",\"timestamp\":1701640344175}],\"collapsed_sections\":[\"HurWt-a6XviJ\",\"ioGxtVltPh-K\",\"akpfU2F3i1LH\",\"zz-2uR7_v3Xi\",\"oBdkMf8WNO4u\"]},\"kernelspec\":{\"display_name\":\"Python 3\",\"name\":\"python3\"},\"language_info\":{\"name\":\"python\"}},\"nbformat\":4,\"nbformat_minor\":0}"],"stylingDirectives":null,"csv":null,"csvError":null,"dependabotInfo":{"showConfigurationBanner":null,"configFilePath":null,"networkDependabotPath":"/AniruddhIngle/Docupresenter/network/updates","dismissConfigurationNoticePath":"/settings/dismiss-notice/dependabot_configuration_notice","configurationNoticeDismissed":false,"repoAlertsPath":"/AniruddhIngle/Docupresenter/security/dependabot","repoSecurityAndAnalysisPath":"/AniruddhIngle/Docupresenter/settings/security_analysis","repoOwnerIsOrg":false,"currentUserCanAdminRepo":false},"displayName":"DocuPresenterFinal.ipynb","displayUrl":"https://notebooks.githubusercontent.com/view/ipynb?browser=safari&bypass_fastly=true&color_mode=auto&commit=016039890b3adcfd7bc2061d3fffc45a723f835f&device=unknown_device&docs_host=https%3A%2F%2Fdocs.github.com&enc_url=68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f416e697275646468496e676c652f446f637570726573656e7465722f303136303339383930623361646366643762633230363164336666666334356137323366383335662f446f637550726573656e74657246696e616c2e6970796e62&logged_in=true&nwo=AniruddhIngle%2FDocupresenter&path=DocuPresenterFinal.ipynb&platform=mac&repository_id=714425858&repository_type=Repository&version=17","headerInfo":{"blobSize":"33.4 KB","deleteInfo":{"deleteTooltip":"Delete this file"},"editInfo":{"editTooltip":"Edit this file"},"ghDesktopPath":"https://desktop.github.com","gitLfsPath":null,"onBranch":true,"shortPath":"4fd9ab4","siteNavLoginPath":"/login?return_to=https%3A%2F%2Fgithub.com%2FAniruddhIngle%2FDocupresenter%2Fblob%2Fmain%2FDocuPresenterFinal.ipynb","isCSV":false,"isRichtext":false,"toc":null,"lineInfo":{"truncatedLoc":"1","truncatedSloc":"1"},"mode":"file"},"image":false,"isCodeownersFile":null,"isPlain":false,"isValidLegacyIssueTemplate":false,"issueTemplateHelpUrl":"https://docs.github.com/articles/about-issue-and-pull-request-templates","issueTemplate":null,"discussionTemplate":null,"language":"Jupyter Notebook","languageID":185,"large":false,"loggedIn":true,"newDiscussionPath":"/AniruddhIngle/Docupresenter/discussions/new","newIssuePath":"/AniruddhIngle/Docupresenter/issues/new","planSupportInfo":{"repoIsFork":null,"repoOwnedByCurrentUser":null,"requestFullPath":"/AniruddhIngle/Docupresenter/blob/main/DocuPresenterFinal.ipynb","showFreeOrgGatedFeatureMessage":null,"showPlanSupportBanner":null,"upgradeDataAttributes":null,"upgradePath":null},"publishBannersInfo":{"dismissActionNoticePath":"/settings/dismiss-notice/publish_action_from_dockerfile","dismissStackNoticePath":"/settings/dismiss-notice/publish_stack_from_file","releasePath":"/AniruddhIngle/Docupresenter/releases/new?marketplace=true","showPublishActionBanner":false,"showPublishStackBanner":false},"rawBlobUrl":"https://github.com/AniruddhIngle/Docupresenter/raw/main/DocuPresenterFinal.ipynb","renderImageOrRaw":false,"richText":null,"renderedFileInfo":{"identityUUID":"d7a1c165-d35b-4634-b18a-9290bc7ee0c3","renderFileType":"ipynb","size":34243},"shortPath":null,"symbolsEnabled":true,"tabSize":8,"topBannersInfo":{"overridingGlobalFundingFile":false,"globalPreferredFundingPath":null,"repoOwner":"AniruddhIngle","repoName":"Docupresenter","showInvalidCitationWarning":false,"citationHelpUrl":"https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/creating-a-repository-on-github/about-citation-files","showDependabotConfigurationBanner":null,"actionsOnboardingTip":null},"truncated":false,"viewable":true,"workflowRedirectUrl":null,"symbols":{"timed_out":false,"not_analyzed":true,"symbols":[]}},"copilotInfo":{"documentationUrl":"https://docs.github.com/copilot/overview-of-github-copilot/about-github-copilot-for-individuals","notices":{"codeViewPopover":{"dismissed":false,"dismissPath":"/settings/dismiss-notice/code_view_copilot_popover"}},"userAccess":{"accessAllowed":false,"hasSubscriptionEnded":false,"orgHasCFBAccess":false,"userHasCFIAccess":false,"userHasOrgs":false,"userIsOrgAdmin":false,"userIsOrgMember":false,"business":null,"featureRequestInfo":null}},"copilotAccessAllowed":false,"csrf_tokens":{"/AniruddhIngle/Docupresenter/branches":{"post":"tJj1wVjflAunet_s-CcomWOfstp5TlLdJjl1NqInF94NA6DG1_YYjmITyulvuVlse4Bu1jBk42kOu_7CdzLlog"},"/repos/preferences":{"post":"_MFB_NoeF8aDgP9cms6Zmo65j-03L_djUmNlAi49kzqzljCo3nhoi6mHwxkAyfSnCqfZfIklgFuvVLWRum7kwA"}}},"title":"Docupresenter/DocuPresenterFinal.ipynb at main · AniruddhIngle/Docupresenter"}